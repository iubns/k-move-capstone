name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          static_site_generator: next
          enablement: true

      - name: Build with Next.js
        run: |
          echo "Starting Next.js build..."
          pnpm build
          echo "Build completed. Exit code: $?"
        env:
          NODE_ENV: production

      - name: List build output
        run: |
          echo "=== Root directory ==="
          ls -la
          echo ""
          echo "=== next.config files ==="
          cat next.config.ts || echo "next.config.ts not found"
          echo ""
          cat next.config.js || echo "next.config.js not found"
          echo ""
          echo "=== .next directory ==="
          ls -la .next/ || echo ".next directory not found!"
          echo ""
          echo "=== out directory ==="
          ls -la out/ || echo "out directory not found!"
          echo ""
          echo "=== Searching for static export output ==="
          find . -maxdepth 2 -type d -name "out" -o -name "dist" -o -name "build"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
